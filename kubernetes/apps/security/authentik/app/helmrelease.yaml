---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authentik
  namespace: security

spec:
  interval: 15m
  chart:
    spec:
      chart: authentik
      version: 2023.6.3
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-system

  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    # -- Server replicas
    replicas: 1
    # -- Custom priority class for different treatment by the scheduler
    priorityClassName:
    # -- server securityContext
    securityContext: {}

    worker:
      # -- worker replicas
      replicas: 1
      # -- Custom priority class for different treatment by the scheduler
      priorityClassName:
      # -- worker securityContext
      securityContext: {}

    image:
      repository: ghcr.io/goauthentik/server
      tag: 2023.6.1
      pullPolicy: IfNotPresent

    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        hajimari.io/icon: two-factor-authentication
        hajimari.io/enable: "true"
      hosts:
        - host: &host "authentik.${SECRET_DOMAIN}"
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - *host

    envFrom:
      - secretRef:
          name: authentik-secret

    authentik:
      log_level: debug
      secret_key: "${AUTHENTIK_SECRET_KEY}"
      email:
        host: "${SMTP_HOST}"
        port: "${SMTP_PORT}"
        username: "${SMTP_USER}"
        password: "${SMTP_PASS}"
        use_tls: true
        from: "${SMTP_FROM}"
      error_reporting:
        enabled: false
        send_pii: false
      postgresql:
        host: "${POSTGRES_HOST}"
        port: 5432
        name: ""
        user: ""
        password: ""
      outposts:
        docker_image_base: ghcr.io/goauthentik/%(type)s:%(version)s

    envValueFrom:
      AUTHENTIK_POSTGRESQL__HOST:
        secretKeyRef:
          name: authentik-secret
          key: POSTGRES_HOST
      AUTHENTIK_POSTGRESQL__NAME:
        secretKeyRef:
          name: authentik-secret
          key: POSTGRES_DB
      AUTHENTIK_POSTGRESQL__USER:
        secretKeyRef:
          name: authentik-secret
          key: POSTGRES_USER
      AUTHENTIK_POSTGRESQL__PASSWORD:
        secretKeyRef:
          name: authentik-secret
          key: POSTGRES_PASS

    postgresql:
      enabled: false
    redis:
      enabled: true
    service:
      enabled: true
      type: ClusterIP
      port: 80
      name: http
      protocol: TCP
      labels: {}
      annotations: {}

    volumes: []

    volumeMounts: []

    # -- affinity applied to the deployments
    affinity: {}

    #  -- tolerations applied to the deployments
    tolerations: []

    # -- nodeSelector applied to the deployments
    nodeSelector: {}

    resources:
      server: {}
      worker: {}

    livenessProbe:
      enabled: true
      httpGet:
        path: /-/health/live/
        port: http
      initialDelaySeconds: 50
      periodSeconds: 10

    readinessProbe:
      enabled: true
      httpGet:
        path: /-/health/ready/
        port: http
      initialDelaySeconds: 50
      periodSeconds: 10

    serviceAccount:
      create: true
      annotations: {}

    prometheus:
      serviceMonitor:
        create: true
        interval: 30s
        scrapeTimeout: 3s
      rules:
        create: true

    geoip:
      enabled: false
      ##accountId: ""
      ##licenseKey: ""

  valuesFrom:
    - kind: Secret
      name: authentik-secret
      valuesKey: email_host
      targetPath: authentik.email.host
    - kind: Secret
      name: authentik-secret
      valuesKey: email_sender
      targetPath: authentik.email.from
    - kind: Secret
      name: authentik-secret
      valuesKey: database_name
      targetPath: authentik.postgresql.name
    - kind: Secret
      name: authentik-secret
      valuesKey: postgresql_user
      targetPath: authentik.postgresql.user
    - kind: Secret
      name: authentik-secret
      valuesKey: postgresql_password
      targetPath: authentik.postgresql.password
    - kind: Secret
      name: authentik-secret
      valuesKey: cookie_secret
      targetPath: authentik.secret_key
    - kind: Secret
      name: authentik-secret
      valuesKey: host
      targetPath: authentik.postgresql.host
